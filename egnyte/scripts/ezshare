#!/usr/bin/env python

import os
import getpass
import keyring
from optparse import OptionParser

from egnyte import client
from egnyte import const

class EzShare(object):
    DEFAULT_EZSHARE = "/Private/%(username)s/ezshare"
    def __init__(self, user):
        self.user = user
        self.username, self.domain = self.user.split("@")
        self.auth = client.RequestsAuth(self.get_access_token())
        self.egnyte_obj = client.EgnyteClient(self.domain, self.auth)
        self.folderpath = self.DEFAULT_EZSHARE % self.__dict__

    def get_access_token(self):
        try:
            access_token = keyring.get_password("egnyte", self.user)
        except ValueError, e:
            raise SystemExit("%s" % e)
        if access_token is None:
            password = getpass.getpass("Enter password: ")
            api_key = raw_input("Enter Api Key: ")
            oauth = client.EgnyteOAuth(
                self.domain, self.username,
                password, api_key,
                )
            access_token = oauth.get_access_token().json()['access_token']
            keyring.set_password("egnyte", self.user, access_token)
        return access_token

    def ezshare(self, filepath):
        r = self.egnyte_obj.create_folder(self.folderpath)
        if r.status_code == 201:
            print "Created: %s" % self.folderpath
        elif r.status_code == 405:
            # folder already exists
            # XXX status_code is not reported properly
            pass
        elif r.status_code == 403:
            # XXX status_code is not reported properly
            # raise SystemExit("Do not have permission to create folder: %s" % self.folderpath)
            pass
        else:
            raise SystemExit("Unable to create folder: %s" % self.folderpath)
        filename = os.path.basename(filepath)
        cfsfilepath = self.folderpath + u'/' + filename
        with open(filepath, 'rb') as fptr:
            r = self.egnyte_obj.put_file(cfsfilepath, fptr)
            if r.status_code != 200:
                raise SystemExit("Unable to upload file")
            print "File uploaded: %s" % filepath

        r = self.egnyte_obj.create_link(
            cfsfilepath,
            const.LINK_KIND_FILE,
            const.LINK_ACCESSIBILITY_ANYONE,
            )
        if r.status_code != 200:
            raise SystemExit("Ezshare link failed")
        data = r.json()
        print "Ezshare link: %s" % data['url']

def main():
    usage = "usage: %prog [options]"
    parser = OptionParser(usage)
    parser.add_option(
        "-u", "--user",
        dest="user",
        help="specify user name e.g myname@domain",
        )
    parser.add_option(
        "-f", "--filepath",
        dest="filepath",
        help="path of file which you want to share",
        )
    (options, args) = parser.parse_args()

    if options.user is None:
        raise SystemExit("Please specify user")
    else:
        params = options.user.split("@")
        assert len(params) == 2, "Please specify user in myuser@domain format"

    if options.filepath is None:
        raise SystemExit("Please specify filepath")
    else:
        options.filepath = os.path.expanduser(options.filepath)
        if not os.path.isfile(options.filepath):
            raise SystemExit("File not exists: %s" % options.filepath)

    ezshare_obj = EzShare(options.user)
    ezshare_obj.ezshare(options.filepath)

if __name__ == "__main__":
    main()
